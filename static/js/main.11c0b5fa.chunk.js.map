{"version":3,"sources":["components/Header/Header.jsx","components/ImageUploaderForm/ImageUploaderForm.jsx","components/Emojis/Emojis.jsx","components/Likes/Likes.jsx","components/FeedItem/FeedItem.jsx","components/FeedList/FeedList.jsx","pages/HomePage/HomePage.jsx","pages/AboutPage.jsx","pages/ProfilePage.jsx","App.jsx","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","ImageUploaderForm","addPhoto","useContext","PhotosContext","_useState","useState","_useState2","Object","slicedToArray","url","setUrl","placeholder","value","onChange","e","target","onClick","preventDefault","type","Emoji","props","role","aria-label","label","aria-hidden","symbol","Likes","totalLikes","likeCount","setLikeCount","_useState3","_useState4","isLiked","setIsLiked","Emojis","FeedItem","photo","likes","alt","src","components_Likes_Likes","FeedList","photos","map","i","FeedItem_FeedItem","key","HomePage","components_ImageUploaderForm_ImageUploaderForm","FeedList_FeedList","AboutPage","ProfilePage","createContext","App","setPhotos","useEffect","fetch","then","response","json","data","Provider","prevState","newPhoto","concat","components_Header_Header","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.11c0b5fa.chunk.js","sourcesContent":["// Exercise 2: Set It Up\r\n    // write a class component\r\n    // make it a ul with a class name of Header\r\n    // make four li: Catstagram, Home, About, Profile\r\n    // put class name of Logo on the li element with GDInsta\r\n    // export default the component!\r\n\r\n// Exercise 6: Routing\r\n    // import Link from react-router-dom\r\n    // use the Link component to link to each route with a 'to' property\r\n    // check that your links work!\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <ul className=\"Header\">\r\n                <li className=\"Logo\">Catstagram</li>\r\n                <li>\r\n                <Link to =\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/about\">About</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/profile\">Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a form element with class name ImageUploaderForm\r\n\t// write one input element and button element inside\r\n\t// export default the component!\r\n\r\n// Exercise 5: Get InFormation\r\n// Rewrite this component to accept user input\r\n// The goal: When the user inputs a url, the component should log it to the console\r\n    // You might want to read a little bit more about forms here: https://reactjs.org/docs/forms.html\r\n    // but essentially, there are two parts to this:\r\n    // 1) the input reflecting it's current value when the input changes\r\n    // 2) and submitting the form.\r\n    // For 1), you will need to create an handleChange function and pass it as a prop to the <input> element.\r\n    // handleChange will set the state with the value of the target of the event passed to it.\r\n    // For 2) you will need to create a handleSubmit function and pass it as an onClick prop to the button.\r\n    // handleSubmit will be the one submitting - ie console.log the current url in the state for now.\r\n    // and on handleSubmit, you will want to reset the state.\r\n\r\n// Exercise 6: Provide Context BONUS\r\n    // Goal: make the ImageUploaderForm actually upload an image to the feed!\r\n    // When a user inputs a full image url, it should update the\r\n    // feed to include the image as a FeedItem!  How can we do this? Using context!\r\n    // You will need to create an addPhoto function in App.jsx (see instructions there).\r\n    // In this component, you will need to pull out addPhoto from context and call it on handleSubmit and pass in the url.\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport {PhotosContext} from '../../App';\r\nimport './ImageUploaderForm.scss'\r\n\r\nfunction ImageUploaderForm() {\r\n    const {addPhoto} = useContext(PhotosContext);\r\n    const [url, setUrl] = useState('');\r\n\r\n    const handleChange = (e) => setUrl(e.target.value);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addPhoto(url);\r\n        setUrl('');\r\n    }\r\n    return (\r\n        <form className=\"ImageUploaderForm\">\r\n            <input \r\n            placeholder={\"Add url here\"} \r\n            value={url} \r\n            onChange={handleChange} />\r\n                <button \r\n                className=\"SubmitButton\" \r\n                onClick={handleSubmit} \r\n                type=\"submit\">\r\n                    Submit\r\n                </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ImageUploaderForm;","import React from 'react';\r\n\r\nconst Emoji = props => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a div with a class name of Likes\r\n\t// write a span and a button element inside\r\n\t// export default the component!\r\n\r\n// Exercise 3: Prop It Up\r\n// Likes should take in number of likes as a prop and display it.\r\n\r\n// Exercise 4: State It\r\n// Create a button that toggles between two states: \"Liked\" and \"Not liked (yet)\"\r\n\t // add a constructor with initial state\r\n\t // add a button to the rendered JSX with an onClick attribute\r\n\t // add a method to handle the click/ change the state\r\n\t // hook up the button text to the state\r\n// BONUS: Create a likes counter\r\n\t // take in a prop for the number of likes\r\n\t // increase or decrease the likes based on whether button click is like/ unlike\r\n\t // hint: take the total likes as a prop, and convert it to state\r\n\r\nimport React, { useState } from 'react';\r\nimport './Likes.scss'\r\nimport Emoji from '../Emojis/Emojis'\r\n\r\nfunction Likes(props) {\r\n\tconst {totalLikes} = props;\r\n\tconst [likeCount, setLikeCount] = useState(totalLikes)\r\n\tconst [isLiked, setIsLiked] = useState(false)\r\n\t\r\n\r\n\tconst handleLikeButton = () => {\r\n\t\tif (isLiked) {\r\n\t\t\tsetLikeCount(likeCount - 1)\r\n\t\t} else {\r\n\t\t\tsetLikeCount(likeCount + 1)\r\n\t\t}\r\n\r\n\t\tsetIsLiked(!isLiked)\r\n\t\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"Likes\">\r\n\t\t\t<span>{likeCount} <Emoji symbol=\"🧡\"/></span>\r\n\t\t\t<button className=\"LikesButton\" onClick={handleLikeButton}>{ isLiked ? <Emoji symbol=\"🧡\"/> : <Emoji symbol=\"🤍 Like\"/> }</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Likes;\r\n","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a div with className FeedItem\r\n\t// make an img element inside\r\n\t// import Likes, include it underneath img\r\n\t// export default the component!\r\n\r\n// Exercise 3: Prop It Up\r\n\t// pass in props as params to the component\r\n\t// destructure what you need from the props\r\n\t// Hint: what do you need in order to get the image to display?\r\n\t// Hint: what do you need in order to get likes to display in the Likes component?\r\n\r\nimport React from 'react';\r\nimport Likes from '../Likes/Likes';\r\nimport './feedItem.scss'\r\n\r\n\r\nfunction FeedItem(props) {\r\n\tconst {photo} = props;\r\n\tconst { url, likes } = photo;\r\n\r\n\treturn (\r\n\t\t<div className=\"FeedItem\">\r\n\t\t\t<img className=\"Image\" alt=\"cat\" src={url} />\r\n\t\t\t<Likes totalLikes={likes} />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default FeedItem;","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a div with className FeedList\r\n\t// import FeedItem and include it inside the div\r\n\t// export default the component!\r\n\r\n// Exercise 3: Prop It Up\r\n\t// FeedList should accept props as params\r\n\t// destructure photos from props\r\n\t// iterate over the data and map each photo data to a FeedItem\r\n\r\n// Exercise 6: Provide Context\r\n    // pull the photos out of the context instead of the props\r\n\r\nimport React, { useContext } from 'react';\r\nimport FeedItem from '../FeedItem/FeedItem';\r\nimport {PhotosContext} from '../../App';\r\n\r\nfunction FeedList() {\r\n    const {photos} = useContext(PhotosContext)\r\n    return (\r\n        <div className=\"FeedList\">\r\n            {\r\n                photos &&\r\n                photos.map((photos, i) =>\r\n                    <FeedItem photo={photos} key={i} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedList;\r\n","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a div with a class name of HomePage\r\n\t// import ImageUploaderForm and FeedList\r\n\t// include them inside of Homepage\r\n\t// export default the Homepage component!\r\n\r\n// Exercise 3: Prop It Up\r\n// Need to extract photos from data and then pass it into FeedList\r\n\r\n// Exercise 6: Provide Context\r\n    // Since you are now taking the data out of the context directly, delete the import data from data.json statement\r\n    // and don't pass it in as props to FeedList\r\n\r\nimport React from 'react';\r\nimport ImageUploaderForm from '../../components/ImageUploaderForm/ImageUploaderForm';\r\nimport FeedList from '../../components/FeedList/FeedList';\r\nimport './HomePage.scss'\r\n\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <ImageUploaderForm />\r\n            <FeedList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction AboutPage() {\r\n    return (\r\n        <div className=\"AboutPage\">\r\n            <h1>About Page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AboutPage","import React from 'react';\r\n\r\nfunction ProfilePage() {\r\n    return (\r\n        <div className=\"ProfilePage\">\r\n            <h1>Profile Page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfilePage\r\n","// Exercise 2: Set It Up\r\n\t// write a class component\r\n\t// make it a div with a class name of App\r\n\t// import Header and Homepage\r\n\t// include them inside of App\r\n\t// export the App component!\r\n\r\n// Exercise 6: Provide Context\r\n    // create PhotosContext outside of the component\r\n    // Wrap the entirety of the contents of the App component with the PhotosContext provider\r\n    // To the PhotosContext provider, pass in a prop of value that is equal to an object with key photos and value of the photos data\r\n\r\n// Exercise 6: Provide Context BONUS\r\n    // Create an addPhoto function here to pass into the context provider to be used in ImageUploaderForm, that accepts the new photo url as a param\r\n    // You can follow along with this tutorial: https://mindsers.blog/en/updating-react-context-from-consumer/ for how to do that\r\n    // You will need to create an entire newPhoto object with the url that gets added to the photos array\r\n    // BUT!  There is an issue that the above tutorial does not address, which is that when you update state, you\r\n    // CANNOT mutate the photos state array directly by using something like photos.push\r\n    // You can read more here to give you some ideas about how to do it: https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/#usinganobjectasastatevariablewithusestatehook\r\n    // Hint: Use Concat\r\n    // EXTRA EXTRA BONUS: Can you figure out how to add it to the beginning of the array instead of the end?\r\n\r\n// Exercise 7: API It\r\n    // change the PhotosContext from accepting the data.photos to an empty array, which will be the default data\r\n    // use the useEffect hook from React to fetch the data\r\n    // the url to fetch data from is: https://api.jsonbin.io/b/5f95dcdbbd69750f00c37370\r\n    // on successful fetch, then convert the response from a response object to a json object\r\n    // once the data is successfully fetched and converted,set the photos to the state\r\n    // don't forget to pass in an empty array as a second argument to useEffect so that it only runs once per component mount\r\n\r\n// Exercise 8: Routing\r\n// Allow your user to route to different pages!\r\n\t// need to import BrowserRouter and Router from react-router-dom\r\n\t// Create basic class components on AboutPage and Profile Page, export them\r\n\t// import them in this file\r\n\t// set up BrowserRouter\r\n\t// set up Route to with paths to each page (hint: HomePage should \"/\") and with the appropriate component\r\n\r\n\r\nimport React, { createContext, useState, useEffect } from 'react'\r\nimport Header from './components/Header/Header'\r\nimport HomePage from './pages/HomePage/HomePage'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport AboutPage from './pages/AboutPage'\r\nimport ProfilePage from './pages/ProfilePage'\r\n\r\nexport const PhotosContext = createContext()\r\n\r\nfunction App() {\r\n    const [photos, setPhotos] = useState([])\r\n    const addPhoto = (url) => {\r\n        setPhotos((prevState) => {\r\n            const newPhoto = {\r\n                url: url,\r\n                likes: 0\r\n            }\r\n            return prevState.concat(newPhoto)\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.jsonbin.io/b/600f8e05bca934583e41c665')\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setPhotos(data.photos)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <PhotosContext.Provider value={{photos, addPhoto}} >\r\n                <div>\r\n                    <Header />\r\n                    <Route exact path=\"/catstagram\" component={HomePage} />\r\n                    <Route path=\"/about\" component={AboutPage} />\r\n                    <Route path=\"/profile\" component={ProfilePage} />\r\n                </div>\r\n            </PhotosContext.Provider>\r\n        </BrowserRouter>\r\n        \r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport \"./style.scss\"\r\n\r\nimport App from \"./App.jsx\"\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"app-root\")\r\n);\r\n"],"sourceRoot":""}